{"version":3,"sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/layer/Property.js","node_modules/ol/asserts.js","node_modules/ol/math.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/transform.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/color-space/rgb.js","node_modules/color-space/xyz.js","node_modules/color-space/luv.js","node_modules/color-space/lchuv.js","node_modules/color-name/index.js","node_modules/color-parse/index.js","node_modules/color-space/hsl.js","node_modules/color-rgba/index.js","node_modules/ol/color.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/Image.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/style/IconImage.js","node_modules/ol/colorlike.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/style/Icon.js","node_modules/ol/style/Text.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Map.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/canvas/ZIndexContext.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/common.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/Source.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid/WMTS.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","node_modules/ol/structs/RBush.js","node_modules/ol/Feature.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom.js","node_modules/ol/render/Feature.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","main.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["BaseEvent","type","_classCallCheck","propagationStopped","defaultPrevented","target","_createClass","key","value","preventDefault","stopPropagation","evt","_default","exports","default","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","o","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","Target","_Disposable","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","assert","assertion","errorMessage","clamp","min","max","Math","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","j","coef","k","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","floor","ceil","_Property","_asserts","_math","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","unitByCode","fromCode","code","METERS_PER_UNIT","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","name","from","test","u","next","done","return","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","rotation","size","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","stops","width","height","wrapX","projectionExtent","worldWidth","worldsAway","wrapAndSliceX","isFinite","padNumber","number","precision","numberString","decimal","join","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_string","delta","closestOnCircle","circle","getRadius","d","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","error","none","level","setLevel","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","setFromArray","makeScale","translate","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","invert","makeInverse","det","determinant","matrixPrecision","transformString","map","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","_Polygon","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","_this3","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","layerState","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","IDLE","LOADING","LOADED","EMPTY","num","hasArea","toSize","_size","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","load","unlistenImageChange","ready","channel","alias","_rgb","xyz","whitepoint","A","C","D50","D55","D65","D75","F2","F7","F11","E","rgb","_xyz","white","g","arg","_u","_v","v","xn","yn","zn","vn","luv","yr","_luv","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","_colorName","parse","baseHues","cstr","parts","alpha","space","toLowerCase","names","isShort","exec","dims","trim","shift","parseFloat","endsWith","match","hsl","s","t1","t2","t3","_colorParse","_hsl","rgba","color","raw","parsed","_lchuv","_colorRgba","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","_iterator","_step","normalize","asArray","isStringColor","_","ua","navigator","userAgent","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","window","_has","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","appendChild","insertBefore","_ImageState","ImageWrapper","stateOrLoader","pixelRatio_","ImageState","image_","loader","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","catch","finally","setImage","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","unlisten","handleLoad","handleError","decodeFallback","_color","_dom","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","createPattern","setSize","maxCacheSize","colorString","shared","_Image","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","_IconImage","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","label","_colorlike","_canvas","RegularShape","_ImageStyle","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","strokeStyle","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_Circle","_Fill","_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","_geometry","_this$getRenderer","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","onload","imageSize","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_parsers","_construct","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","_defineProperty","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","Set","featureId","geometryType","getTypeFromHint","typeHint","encoded","parseCallExpression","_iterator2","_step2","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","parsers","createParser","_ref","_ref2","withArgsCount","withGetArgs","_ref3","_ref4","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","JSON","stringify","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","needleType","colors","parsedColors","returnType","_len2","argValidators","_key2","actualType","parser","computeGeometryType","substring","_expression","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","_Icon","_Style","_Text","_cpu","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","id","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","_Layer2","_rbush","_interopRequireWildcard","_style","_getRequireWildcardCache","WeakMap","has","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","_BaseVector","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","layerIndex","sourceState","_Collection","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_PriorityQueue2","_TileState","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","_regeneratorRuntime","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","awrap","async","rval","handle","finish","_catch","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","_updateElement_","_callee","_callee$","_context","all","attribution","updateElement_","_x","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","ZIndexContext","instructions_","context_","Proxy","CanvasRenderingContext2D","pushMethodArgs_","draw","instructionsAtIndex","instructionAtIndex","_ZIndexContext","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","_Tile2","ImageTile","_Tile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","_ImageTile","_TileRange","CanvasTileLayerRenderer","_CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","getInterpolate","zs","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","_BaseTile","_TileLayer","TileLayer","_BaseTileLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","lastIndexOf","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","_TileGrid2","WMTSTileGrid","_TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","_WMTS","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_Source2","_TileCache","_tilegrid","TileSource","_Source","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","url","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","_TileImage2","XYZ","_TileImage","_XYZ2","ATTRIBUTION","OSM","_XYZ","maxEntries","rbush_","RBush_","items_","insert","extents","items","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","Feature","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","setCenterAndRadius","getRadiusSquared_","circleExtent","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometries","setGeometriesArray","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","lineStringLength","linearRingLength","perimeter","_interpolate","_length","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","_this$flatMidpoint_","_LineString","MultiLineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","_MultiPoint","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_GeometryCollection","_MultiLineString","_MultiPolygon","_Feature","_geom","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","_this$ends_","enableSimplifyTransformed","toGeometry","renderFeature","toFeature","geometryName","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","_RBush","_VectorEventType","_loadingstrategy","_featureloader","VectorSourceEvent","VectorSource","loader_","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","_this4","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","_this5","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","loadFeatures","_this6","loadedExtentsRtree","extentsToLoad","_loop","extentToLoad","alreadyLoaded","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","removed","setLoader","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","_textpath","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","_Executor","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","replayGroup","loadingPromises","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","transformToString","hasRenderListeners","clipped","getSquaredRenderTolerance","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","_VectorLayer","VectorLayer","_BaseVectorLayer","_OSM","_Vector","_Vector2","lonInput","latInput","altInput","updateMapCenter","updateButton","onclick","longitude","latitude","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","message","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":"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AAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAP5C;AACA;AACA;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAMsnD,WAAW,GAAA3pD,OAAA,CAAA2pD,WAAA,GAAG,iBAAiB;;AAE5C;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAA5pD,OAAA,CAAA4pD,gBAAA,GAAG,MAAM;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,cAAc,GAAA7pD,OAAA,CAAA6pD,cAAA,GAAG,OAAO;;AAErC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAA9pD,OAAA,CAAA8pD,eAAA,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACO,IAAMC,qBAAqB,GAAA/pD,OAAA,CAAA+pD,qBAAA,GAAG,CAAC;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAAhqD,OAAA,CAAAgqD,eAAA,GAAG,OAAO;;AAEtC;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAAjqD,OAAA,CAAAiqD,iBAAA,GAAG,EAAE;;AAEnC;AACA;AACA;AACA;AACO,IAAMC,kBAAkB,GAAAlqD,OAAA,CAAAkqD,kBAAA,GAAG,MAAM;;AAExC;AACA;AACA;AACA;AACO,IAAMC,gBAAgB,GAAAnqD,OAAA,CAAAmqD,gBAAA,GAAG,QAAQ;;AAExC;AACA;AACA;AACA;AACO,IAAMC,mBAAmB,GAAApqD,OAAA,CAAAoqD,mBAAA,GAAG,QAAQ;;AAE3C;AACA;AACA;AACA;AAC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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  compose as composeTransform,\n  makeInverse,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","// Import necessary OpenLayers modules\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\nimport { toLonLat, fromLonLat } from 'ol/proj';\n\n// Initialize map\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 4\n  })\n});\n\n// Create a vector source and add it to the map as a layer\nconst vectorSource = new VectorSource();\nconst vectorLayer = new VectorLayer({\n  source: vectorSource\n});\nmap.addLayer(vectorLayer);\n\n// Get input elements\nconst lonInput = document.getElementById('longitude');\nconst latInput = document.getElementById('latitude');\nconst altInput = document.getElementById('altitude');\n\n// Add click event listener to map\nmap.on('click', function (event) {\n  // Get clicked coordinate and transform it to longitude and latitude\n  const lonLat = toLonLat(event.coordinate);\n\n  // Update inputs\n  lonInput.value = lonLat[0];\n  latInput.value = lonLat[1];\n\n  // TODO: Get altitude of clicked location and update altitude input\n  // altInput.value = getAltitude(lonLat[0], lonLat[1]);\n});\n\nfunction updateMapCenter(lon, lat) {\n  // Convert longitude and latitude to a coordinate\n  const coordinate = fromLonLat([lon, lat]);\n\n  // Set map center to the coordinate\n  map.getView().setCenter(coordinate);\n}\n\nupdateButton.onclick = () => updateMapCenter(longitude.value, latitude.value);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}